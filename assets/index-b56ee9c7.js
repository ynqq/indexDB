var f=Object.defineProperty;var g=(r,t,s)=>t in r?f(r,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[t]=s;var a=(r,t,s)=>(g(r,typeof t!="symbol"?t+"":t,s),s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const d of o.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&i(d)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const l={OPEN_ERROR:"数据库打开失败",WRITE_ERROR:"数据写入失败",SELECT_ERROR:"查询失败",DELETE_ERROR:"删除失败"},c={SUCCESS_CODE:0,SUCCESS_MSG:"操作成功",NO_DATA_CODE:1,NO_DATA_MSG:"未查到数据",ERROR_CODE:2,ERROR_MSG:"操作失败"},n={noData(){return{code:c.NO_DATA_CODE,msg:c.NO_DATA_MSG,data:null}},success(r){return{code:c.SUCCESS_CODE,msg:c.SUCCESS_MSG,data:r}},error(r){return{code:c.ERROR_CODE,msg:r||c.ERROR_MSG,data:null}}};class E extends Error{}const R=r=>new Promise(t=>{setTimeout(()=>{t()},r)});class b{constructor(t){a(this,"name");a(this,"version");a(this,"db");a(this,"options");this.name=t.name,this.version=t.version,this.options=t}init(){return new Promise((t,s)=>{const i=window.indexedDB.open(this.name);i.onerror=()=>{s(new E(l.OPEN_ERROR))},i.onsuccess=()=>{this.db=i.result,t(!0)},i.onupgradeneeded=e=>{this.db=e.target.result;for(let o in this.options.tableList){const d=this.options.tableList[o];this.db.objectStoreNames.contains(d.storeName)||this.db.createObjectStore(d.storeName,{keyPath:d.keyPath})}t(!0)}})}static async getDB(t){const s=new this(t);return await s.init(),await R(300),s.db}}class v{constructor(t){a(this,"db");a(this,"storeName");this.db=t.db,this.storeName=t.storeName,this.init()}init(){}getName(){return this.storeName}add(t){return new Promise((s,i)=>{const e=this.db.transaction([this.storeName],"readwrite").objectStore(this.storeName).add(t);e.onerror=()=>{i(n.error(l.WRITE_ERROR))},e.onsuccess=()=>{s(n.success(t))}})}get(t){return new Promise((s,i)=>{const e=this.db.transaction([this.storeName],"readonly").objectStore(this.storeName).get(t);e.onerror=()=>{i(n.error(l.SELECT_ERROR))},e.onsuccess=o=>{o.target.result===void 0?s(n.noData()):s(n.success(o.target.result))}})}getAll(){return new Promise((t,s)=>{const i=this.db.transaction([this.storeName],"readonly").objectStore(this.storeName).getAll();i.onerror=()=>{s(n.error(l.SELECT_ERROR))},i.onsuccess=e=>{t(n.success(e.target.result))}})}async update(t,s){return(await this.get(t)).code===0?new Promise((e,o)=>{const d=this.db.transaction([this.storeName],"readwrite").objectStore(this.storeName).put(s);d.onerror=()=>{o(n.error(l.WRITE_ERROR))},d.onsuccess=m=>{e(n.success(m.target.result))}}):Promise.reject(n.noData())}delete(t){return new Promise(async(s,i)=>{if((await this.get(t)).code!==0)return i(n.noData());const o=this.db.transaction([this.storeName],"readwrite").objectStore(this.storeName).delete(t);o.onerror=()=>{i(n.error(l.DELETE_ERROR))},o.onsuccess=()=>{s(n.success(t))}})}remove(){return this.db.deleteObjectStore(this.storeName),n.success(!0)}}class O{constructor(){this.registerServiceWorker()}async registerServiceWorker(){if("serviceWorker"in navigator)try{const t=await navigator.serviceWorker.register("/indexDB/sw.js?ver=1",{scope:"/indexDB/"});t.installing?console.log("正在安装"):t.waiting?console.log("已安装"):t.active&&console.log("激活")}catch(t){console.log(t,"registerError")}}}const S=document.querySelector(".addBtn"),u=document.querySelector(".todoList"),h=document.querySelector("#todoValue");class w{constructor(){a(this,"db");a(this,"todoList");a(this,"flag","add");a(this,"dbOptions");a(this,"actionId");console.log("????new----"),this.flag="add",this.actionId=-1,this.dbOptions={name:"demo",version:1,tableList:{todoList:{storeName:"todoList",keyPath:"id",version:1}}},this.init()}async init(){this.db=await b.getDB(this.dbOptions),this.todoList=new v({...this.dbOptions.tableList.todoList,db:this.db}),this.initSW(),this.initPage(),this.addEvent()}initSW(){new O}async initPage(){u.innerHTML="";const t=await this.todoList.getAll();t.code===0&&t.data.forEach(s=>{this.addItem(s)})}addEvent(){S.addEventListener("click",()=>{const t=h.value.trim();t!==""&&(this.flag==="add"?this.addItem({info:t,id:Date.now()},{save:!0}):this.flag==="edit"&&this.updateItem({info:t,id:this.actionId}),h.value="")}),u.addEventListener("click",async t=>{const s=t.target,i=s.classList;if(i.contains("delete"))this.flag="delete",this.actionId=+s.getAttribute("data-id"),await this.todoList.delete(this.actionId),this.initPage();else if(i.contains("edit")){this.flag="edit",this.actionId=+s.getAttribute("data-id");const e=await this.todoList.get(this.actionId);e.code===0&&(h.value=e.data.info)}})}reset(){this.flag="add",this.actionId=-1}addItem(t,s){s=s||{save:!1};const i=`<div class="todoInfo">
      <div class="todoTitle">${t.id}</div>
      <div class="todoText">${t.info}</div>
    </div>
    <div class="todoControl">
      <div class="todoBtn edit" data-id="${t.id}">修改</div>
      <div class="todoBtn delete" data-id="${t.id}">删除</div>
    </div>`,e=document.createElement("div");e.className="todoItem",e.setAttribute("data-id",t.id+""),e.innerHTML=i,u.appendChild(e),s.save&&this.todoList.add(t)}async updateItem(t){(await this.todoList.update(this.actionId,t)).code===0&&this.initPage()}}new w;
